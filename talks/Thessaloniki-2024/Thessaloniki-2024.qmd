---
title:       Markov chain Monte Carlo and Perfect Simulation
subtitle:    Lecture at Aristotle University of Thessaloniki
date:        15 May 2024
author:     
    - name:           Wilfrid S Kendall
      url:            https://wilfridskendall.github.io/talks/Thessaloniki-2024/Thessaloniki-2024-handout.pdf
      affiliation:    University of Warwick Department of Statistics
      affilation-url: https://www.warwick.ac.uk/statsdept
institute: Department of Statistics, University of Warwick
license:    "CC BY"
---


---
from: markdown+tex_math_single_backslash

format: 
    beamer:
        date-format:     "D MMMM YYYY"
        logo:            image/WarwickStatistics-small.png
        titlegraphic:    image/talk_URL.jpg

        theme:           Boadilla
        mainfont:        "Times New Roman"
        monofont:        "JuliaMono"
        incremental:     true
        link-citations:  true
        citecolor:       blue
        hyperrefoptions:
            - pdfstartview=Fit

        include-in-header:
            - "Thessaloniki-2024.sty"
        nocite: |
            @Rmanual-2010
---



Introduction   {#sec-introduction}
============

:::: {.columns}

::: {.column}

![`Αριστοτέλης` 384–322 BCE](image/Aristotle_Altemps_Inv8575.jpg){width=1.5in}

:::

::: {.column}

Aristotle: 

- "Pleasure in the job puts perfection in the work."
- "The more you know, the more you know you don't know."

\pause

\bigskip

Handout available on the web: either use the `QR-code`  
![](image/talk_URL.jpg)

:::

::::

or visit <https://wilfridskendall.github.io/talks/Thessaloniki-2024/>.

Sketch of MCMC (I)   {#sec-MCMC-I}
==================
:::: {.columns}

::: {.column}

![Edward Teller (1908-2003)](image/Edward_Teller_in_1958.jpg){width=2in}

:::

::: {.column}

The original Markov chain Monte Carlo method 
(\structure{MCMC}) 
was introduced by @MetropolisRosenbluthRosenbluthTellerTeller-1953.
The senior author was Edward Teller ("father of the H-bomb").

\pause

\bigskip \text{ } \bigskip \text{ } \bigskip  \bigskip \text{ } \medskip

[Fermi once said,] Teller was the only monomaniac he knew who had several manias: see @BrownMay-2004.
:::

::::



Sketch of MCMC (II)   {#sec-MCMC-II}
===================
* \structure{Markov chain basics}:
	- \structure{Transition probabilities} \(p(a,b)\) 
	(or \structure{transition rates} in continuous time: 
	unified view using exponential distribution);
	- Εquilibrium probabilities \(\pi(a)\), balance,  
	\qquad \structure{detailed balance} \(\pi(a) p(a,b)=\pi(b) p(b,a)\), 
	\structure{reversibility};
	- Aperiodicity, recurrence (and uniform and geometric recurrence);
	- under detailed balance we can \structure{condition} by forbidding transitions;  
	
* We can modify any chain, transition probabilities \(p(a,b)\),
to leave a specified target distribution \(\pi(a)\)
\structure{invariant}, by \structure{censoring} each possible transition 
\(a\to b\) with probability \(\alpha(a,b)\in[0,1]\)
such that  
\qquad
\(\alert{\alpha(a,b)}\pi(a) p(a,b)=\alert{\alpha(b,a)}\pi(b) p(b,a)\);
* Common choice: \structure{Metropolis-Hastings}  
\qquad\(\alpha(a,b) = \min\{1,(\pi(b) p(b,a)) / (\pi(a) p(a,b))\}\).
* If result still irreducible aperiodic, then \(\pi(a)\)
is its long-term equilibrium.
* This is MCMC, now of intense interest to statisticians. 
* But, physicists always remind us, physicists got there fifty years earlier!

Sketch of MCMC (III)   {#sec-MCMC-III}
====================
Given the \(\pi(a)\), how to \structure{design}
a Markov chain to have this as equilibrium?

(i) \structure{Independence sampler}: draw from a fixed probability distribution,
apply Metropolis-Hastings;
(ii) \structure{Random walk Metropolis} or \structure{RWM}: propose move using a random walk,
apply Metropolis-Hastings;
(iii) \structure{Metropolis-adjusted Langevin} or \structure{MALA}:
make a Gaussian jump shifted using gradient of \(\log\pi\), apply Metropolis-Hastings.\pause

Can mix-and-match! RWM is often favourite: flexible, not too complicated.\pause

Issues:

(A) \structure{Burn-in}: _How long_ till approximate equilibrium?
(B) \structure{Scaling}: _How big_ should be the RWM jump?\pause

Question (B) is about how to get fast mixing. There is a beautiful and useful theory, but
that is for another day.\pause

Question (A) is what this lecture is all about.

Sketch of MCMC (IV)   {#sec-MCMC-IV}
===================
* MCMC practicalities: Burn-in: what to do about it?
	- Theory tends to be much too pessimistic. Example: Zanella [-@Zanella-2014; -@Zanella-2015b] developed statistical methods for Anglo-Saxon history: a  _simplified_ model appeared to converge approximately in \(10^5\) steps (about 1 week on compute cluster), _versus_ \(10^9\) steps in theory (around 2 centuries);
	- Is (a) one long run better or (b) many short runs? (Option (b) requires starts of short runs spread "evenly" over the sample space — almost as hard in high dimensions as the original problem!)
	- Diagnostics? (Meta-theorem: for any diagnostic technique there is a chain for which the technique is deceptive!)
	- Conclusion: effective MCMC requires very careful thought about appropriate length of run — think deeply about the problem! 
* Can there ever be a better way?

Perfect Simulation  {#sec-perfection}
==================

* The idea of exact simulation / Coupling from the Past (CFTP) / perfect simulation @ProppWilson-1996a  (Persi Diaconis: “Like seeing the landscape of Mars for the first time”);
* Ideas (of “_classic CFTP_”): 
	- extending simulation _backwards_ through time, 
	- exploit monotonicity by coupling maximal and minimal processes, 
	- seek coalescence;
* Details for _random-walk-CFTP_, which can be boosted as above to provide simple image reconstruction of an image using Ising model, @ProppWilson-1996a show how to vary a clever algorithm to get exact samples for 
\structure{critical} Ising model (this is what impressed Diaconis);
* “Perfect simulation” [@Kendall-1998d]: because everyone knows it isn’t going to be perfect, whereas people might imagine “exact simulation” would somehow miraculously defeat numerical approximation error :-).


An example and some theory  {#sec-example}
==========================
* An intensely visual example, which helps many people see intuitively what is going on here, is _DeadLeaves-CFTP_ [@KendallThoennes-1999] (technically, _Occluded CFTP_);
* What about cases where monotonicity fails? or there isn’t a sensible “maximal” process? @Kendall-1998d: 
	* cross-couple upper and lower envelope processes, 
	* dominate by amenable “dominating process” (time-reversible, can draw from equilibrium, can couple target processes below dominating process); 
* Theoretical limits:  _in principle_
	- _Classical CFTP_ equivalent to uniform ergodicity [@FossTweedie-1998]. 
	- _Dominated CFTP_ is achievable under geometric ergodicity [@Kendall-2004c]. 
	- It is even possible to carry out Dominated CFTP in some **non**-geometrically ergodicity cases [@ConnorKendall-2007a; _nb_ corrigendum];
* We can use _Dominated CFTP_ to carry out perfect simulation for stable point processes [@KendallMoeller-2000];
* Detailed expositions are given by @Kendall-2005a, @Huber-2015. @Kendall-2014b shows
how to implement CFTP in R.

Applications to Queues and Epidemics  {#sec-applications}
====================================
![An illustration introducing _both_ queues _and_ epidemics!](https://covidposters.github.io/images/queues.png){width=3.5in}

Perfect Queues  {#sec-queues}
==============
 The simplest queuing model (Poisson arrivals, exponential service times, single server) can be analyzed very throughly;

* Poisson arrivals are not unreasonable, but exponential service times are ludicrous. Fortunately the case of general service time can use the “embedded chain” (sample at instants of departure), if just 1 server;
* Multi-server case: computation of eg waiting-time distribution is out of reach so use simulation [and insights from @KieferWolfowitz-1955];
*  @Sigman-2011 shows how to do CFTP in the "super-stable" case (traffic so low that it could have been handled by just one server), using Dominated CFTP and comparing to a "Processor-sharing" discipline.
* @ConnorKendall-2014 show how to extend @Sigman-2011, showing how Dominated CFTP can be applied to simulate (sub-critical!) queues perfectly (and this has now been generalized by others to the case of non-Poissonian inter-arrival times). (Technical point: pathwise domination requires service times to be assigned in order of commencement of service!)

Perfect Epidemics  {#sec-epidemics}
=================
* Even the simple case of deterministic S-I-R permits only *partial* closed-form solution;
* Suppose one can observe **only** the “removal times”? Can one do perfect simulation of the infection times? (Given basic parameters.)
* **YES**: work in progress by Connor and Kendall. Here is a GIF illustrating this for a real-life small-pox epidemic;
* (be clear about assumptions!)
* (indicate how the perfect simulation algorithm can be used as a high-dimensional integration device to enable simulation-based Bayesian inference!). 

Conclusion  {#sec-conclusion}
==========
* You don’t always have to put up with burn-in issues when doing MCMC;
* CFTP works even for significantly complex and relevant models of real-life phenomena;
* _Of course_ really detailed models are still going to resist perfect simulation: but it will always be helpful to compare with a simpler model (using fewer parameters!). 
* CFTP is clearly an important tool to be considered by the investigator seeking to do accurate and informative MCMC.


References {.allowframebreaks} 
==========

\scriptsize

::: {#refs}
:::

Image attributions
==================

\scriptsize

::: {style="font-size: 25%;"}

| Image         | Attribution                                                                    | License      |
| ------------- | ------------------------------------------------------------------------------ | ------------ |
| [Aristotle](https://commons.wikimedia.org/wiki/File:Aristotle_Altemps_Inv8575.jpg) | After Lysippos | _Public domain_ |
|               |                                                                    | via Wikimedia Commons    |
| [Edward Teller](https://commons.wikimedia.org/wiki/File:Edward_Teller_in_1958.jpg) | Lawrence Livermore National Laboratory                       | _[CC BY-SA 3.0](https://creativecommons.org/licenses/by-sa/3.0)_    |
|               | restored by w:User:Greg L, Papa Lima Whiskey                       | via Wikimedia Commons    |  
| Perfect Ising                                              | Result of code written by WSK     | _[CC BY-SA 3.0](https://creativecommons.org/licenses/by-sa/4.0)_ | 
| Dead leaves                                                | Result of code written by WSK     | _[CC BY-SA 3.0](https://creativecommons.org/licenses/by-sa/4.0)_ | 
| [Queues](https://covidposters.github.io/images/queues.png) | <https://covidposters.github.io/> |_Open source_ | 
| Epidemic                                                   | Result of code written by WSK     | _[CC BY-SA 3.0](https://creativecommons.org/licenses/by-sa/4.0)_ | 

: {tbl-colwidths="[20,50,30]"}

:::


\scriptsize

